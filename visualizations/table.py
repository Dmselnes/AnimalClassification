import re
import pandas as pd
import numpy as np

# === INPUT ===
model_info = {
    "ViT large": {
        "resolution": "384",
        "params": "86M",
        "conf_matrix": [
            [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 884, 0, 2, 1, 0, 1, 4, 13, 8, 27, 9, 1],
            [0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 1, 1, 1971, 7, 0, 1, 4, 5, 3, 0, 29, 0],
            [0, 1, 0, 12, 1350, 1, 2, 1, 2, 1, 0, 33, 1],
            [0, 1, 0, 0, 1, 596, 0, 0, 0, 2, 0, 3, 0],
            [0, 4, 0, 1, 1, 0, 485, 10, 3, 4, 2, 9, 0],
            [0, 7, 0, 1, 1, 2, 4, 2966, 21, 36, 11, 37, 1],
            [0, 10, 0, 1, 0, 0, 5, 13, 1637, 19, 5, 14, 1],
            [0, 12, 0, 0, 0, 0, 7, 28, 13, 2948, 9, 14, 0],
            [0, 50, 0, 1, 0, 0, 0, 6, 11, 12, 636, 12, 0],
            [0, 8, 0, 10, 15, 0, 4, 20, 10, 8, 3, 8126, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 35]
        ]
    },
    "Swin large": {
        "resolution": "384",
        "params": "88M",
        "conf_matrix": [
            [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
            [0, 902, 0, 0, 2, 0, 1, 3, 6, 9, 15, 12, 0],
            [0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 4, 1, 1984, 6, 0, 1, 2, 3, 2, 0, 19, 0],
            [0, 0, 0, 6, 1362, 0, 0, 0, 0, 0, 1, 34, 1],
            [0, 1, 0, 0, 1, 599, 1, 0, 0, 0, 0, 1, 0],
            [0, 2, 0, 0, 1, 0, 501, 7, 2, 2, 0, 4, 0],
            [0, 0, 0, 2, 1, 1, 6, 3012, 13, 15, 8, 29, 0],
            [0, 6, 0, 2, 0, 1, 2, 11, 1653, 8, 6, 14, 2],
            [1, 8, 0, 1, 0, 0, 1, 26, 8, 2968, 9, 9, 0],
            [0, 27, 0, 1, 0, 0, 0, 4, 4, 6, 676, 10, 0],
            [0, 1, 0, 5, 15, 0, 1, 14, 4, 7, 3, 8154, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 37]
        ]
    },
    "DeiT large": {
        "resolution": "384",
        "params": "86M",
        "conf_matrix": [
            [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 870, 0, 2, 0, 0, 3, 13, 6, 11, 27, 16, 2],
            [0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 4, 1, 1970, 8, 0, 0, 3, 6, 2, 1, 25, 2],
            [0, 3, 0, 10, 1355, 0, 0, 0, 1, 1, 1, 33, 0],
            [0, 3, 0, 0, 0, 598, 0, 1, 0, 0, 0, 1, 0],
            [0, 1, 0, 0, 0, 0, 490, 7, 6, 7, 0, 8, 0],
            [1, 6, 0, 3, 0, 2, 9, 2977, 18, 25, 8, 36, 2],
            [0, 11, 0, 3, 0, 0, 4, 13, 1638, 13, 7, 15, 1],
            [0, 8, 0, 0, 0, 1, 10, 23, 13, 2950, 10, 16, 0],
            [0, 53, 0, 1, 0, 0, 0, 9, 9, 8, 636, 12, 0],
            [0, 4, 0, 8, 11, 0, 2, 11, 9, 6, 5, 8147, 1],
            [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 34]
        ]
    },
    "resnet-152 small": {
        "resolution": "384",
        "params": "idk",
        "conf_matrix": [
        [   2,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0],
        [   0,  834,    0,    3,    1,    1,    6,    5,   14,    12,   68,
            1,    5],
        [   0,    0,    7,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0],
        [   7,    14,    8, 1892,   25,    3,    6,    3,  15,    7,    2,
           23,    17],
        [   0,    2,    2,    27, 1302,    4,    5,    1,    5,    2,    1,
           50,    3],
        [   1,    1,    1,    2,    3,  583,    4,    2,    0,    3,    0,
            1,    2],
        [   1,    4,    3,    1,    2,    0,   479,    3,    6,    7,    2,
            6,    5],
        [   5,   24,   15,    5,    4,    2,   41, 2691,   52,   78,    34,
           56,   80],
        [   0,   29,   19,    6,    3,    0,    7,    12, 1559,    17,   25,
           14,    14],
        [   3,    37,   10,    1,    3,    2,    17,   36,    37, 2831,   38,
            7,    9],
        [   0,    77,    3,    0,    1,    0,    2,    7,    5,    14,  614,
            4,    1],
        [   9,   39,    17,   87,  150,   10,   45,   51,   74,   52,   45,
         7541,   64],
        [   0,    0,    0,    0,    0,    0,    0,    9,    0,    0,    0,
            0,    37]]
    },

    "resnet-50 small": {
        "resolution": "384",
        "params": "idk",
        "conf_matrix": [
        [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 791, 0, 2, 3, 1, 6, 3, 11, 9, 115, 1, 8],
        [0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [9, 37, 13, 1823, 42, 4, 5, 3, 15, 1, 6, 20, 44],
        [0, 13, 5, 61, 1220, 2, 2, 2, 17, 6, 0, 69, 7],
        [1, 3, 7, 3, 1, 577, 3, 0, 0, 1, 2, 1, 4],
        [2, 7, 5, 3, 2, 2, 433, 11, 20, 11, 7, 4, 12],
        [7, 49, 14, 8, 6, 8, 48, 2506, 110, 93, 87, 46, 105],
        [1, 61, 10, 3, 0, 0, 11, 13, 1481, 23, 40, 16, 46],
        [4, 55, 13, 0, 3, 8, 14, 40, 63, 2724, 90, 4, 13],
        [0, 114, 0, 3, 1, 1, 2, 4, 19, 7, 576, 1, 0],
        [3, 173, 42, 133, 496, 23, 83, 141, 191, 33, 128, 6649, 109],
        [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 35]
    ]
},

    "resnet-18 small": {
        "resolution": "384",
        "params": "idk",
        "conf_matrix": [
        [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 827, 1, 1, 3, 0, 3, 12, 15, 9, 65, 7, 7],
        [0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [2, 28, 9, 1809, 44, 8, 5, 14, 31, 6, 5, 37, 24],
        [0, 7, 1, 38, 1295, 3, 1, 1, 12, 3, 4, 36, 3],
        [1, 6, 0, 2, 4, 579, 3, 0, 4, 1, 0, 2, 1],
        [0, 11, 0, 4, 4, 0, 441, 11, 13, 16, 4, 5, 10],
        [3, 45, 8, 5, 14, 3, 80, 2548, 83, 132, 53, 48, 65],
        [1, 44, 8, 7, 6, 3, 14, 29, 1521, 24, 20, 11, 17],
        [1, 68, 10, 8, 13, 8, 26, 52, 48, 2713, 65, 11, 8],
        [0, 111, 1, 1, 2, 2, 2, 9, 15, 10, 569, 6, 0],
        [2, 128, 13, 102, 320, 30, 47, 156, 180, 54, 89, 6970, 113],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 37]
    ]
    },

    "cvt small": {
        "resolution": "384",
        "params": "idk",
        "conf_matrix": [
        [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 847, 0, 1, 0, 1, 5, 4, 11, 6, 61, 9, 5],
        [0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [4, 11, 10, 1898, 20, 4, 3, 10, 19, 2, 3, 26, 12],
        [0, 4, 1, 37, 1294, 0, 4, 2, 4, 0, 1, 56, 1],
        [1, 1, 1, 0, 2, 591, 1, 0, 3, 1, 1, 0, 1],
        [0, 2, 1, 1, 0, 0, 474, 10, 12, 6, 3, 5, 5],
        [1, 21, 4, 2, 10, 3, 54, 2751, 55, 55, 23, 59, 49],
        [0, 19, 2, 1, 0, 1, 12, 20, 1574, 26, 18, 18, 14],
        [1, 32, 0, 3, 3, 6, 14, 39, 30, 2858, 31, 12, 2],
        [0, 40, 0, 3, 0, 2, 1, 6, 12, 9, 649, 6, 0],
        [0, 33, 3, 60, 144, 15, 42, 87, 70, 26, 42, 7645, 37],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 37]
    ]
    },

    "convnext small": {
        "resolution": "384",
        "params": "idk",
        "conf_matrix": [
        [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 860, 0, 6, 1, 2, 3, 3, 8, 8, 50, 8, 1],
        [0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [1, 7, 4, 1958, 13, 4, 0, 1, 10, 2, 3, 14, 5],
        [0, 4, 0, 26, 1329, 5, 1, 1, 1, 0, 0, 36, 1],
        [1, 1, 0, 2, 0, 595, 0, 1, 0, 0, 0, 1, 2],
        [0, 1, 1, 0, 2, 1, 480, 14, 4, 4, 3, 6, 3],
        [1, 12, 0, 7, 3, 3, 12, 2893, 31, 45, 23, 38, 19],
        [0, 21, 4, 2, 1, 2, 3, 8, 1606, 19, 19, 13, 7],
        [6, 27, 3, 3, 2, 11, 7, 32, 20, 2878, 32, 7, 3],
        [0, 41, 0, 3, 0, 3, 1, 7, 5, 5, 657, 5, 1],
        [1, 35, 2, 78, 73, 11, 10, 79, 46, 20, 42, 7778, 29],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 37]
    ]

    },

    "beit small": {
        "resolution": "384",
        "params": "idk",
        "conf_matrix": [
        [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [1, 833, 1, 3, 0, 2, 5, 6, 11, 11, 66, 7, 4],
        [0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [9, 4, 4, 1927, 17, 0, 4, 3, 18, 4, 2, 15, 15],
        [0, 2, 2, 11, 1348, 1, 2, 0, 4, 1, 0, 31, 2],
        [1, 1, 0, 1, 1, 595, 2, 0, 0, 1, 0, 0, 1],
        [0, 0, 0, 1, 0, 1, 493, 2, 5, 4, 1, 4, 8],
        [2, 12, 3, 2, 6, 7, 37, 2836, 49, 47, 23, 20, 43],
        [1, 21, 3, 1, 2, 3, 12, 12, 1602, 12, 15, 10, 11],
        [5, 24, 1, 5, 1, 2, 19, 23, 19, 2888, 33, 9, 2],
        [0, 34, 1, 1, 1, 2, 1, 8, 10, 5, 659, 6, 0],
        [1, 16, 7, 49, 95, 12, 25, 75, 62, 25, 42, 7750, 45],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 37]
    ]

    },
    "resnet-152 large": {
        "resolution": "384",
        "params": "idk",
        "conf_matrix": [
    [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 882, 1, 2, 1, 0, 1, 4, 10, 18, 22, 9, 0],
    [0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 2, 0, 1979, 10, 1, 0, 1, 4, 2, 1, 22, 0],
    [1, 0, 0, 11, 1362, 0, 0, 0, 1, 0, 0, 28, 1],
    [1, 2, 0, 3, 0, 592, 1, 1, 1, 1, 0, 0, 1],
    [0, 2, 1, 1, 0, 0, 499, 2, 1, 3, 0, 7, 3],
    [0, 4, 0, 2, 2, 1, 7, 2991, 12, 19, 6, 36, 7],
    [0, 9, 0, 1, 0, 0, 1, 11, 1646, 8, 7, 20, 2],
    [0, 6, 0, 1, 0, 1, 5, 14, 9, 2973, 10, 12, 0],
    [0, 31, 0, 0, 0, 0, 0, 9, 9, 20, 653, 6, 0],
    [0, 7, 1, 7, 20, 1, 2, 7, 9, 9, 5, 8131, 5],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 34]
]

    },

    "resnet-50 large": {
        "resolution": "384",
        "params": "idk",
        "conf_matrix": [
        [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0],
        [0, 885, 0, 1, 0, 1, 2, 6, 3, 7, 30, 15, 0],
        [0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [2, 10, 2, 1951, 13, 1, 3, 3, 10, 1, 1, 22, 3],
        [0, 5, 0, 19, 1325, 2, 0, 4, 3, 3, 0, 43, 0],
        [0, 2, 0, 1, 0, 590, 2, 2, 1, 1, 0, 3, 1],
        [0, 2, 0, 1, 0, 0, 493, 7, 3, 4, 0, 9, 0],
        [0, 10, 0, 2, 0, 2, 8, 2950, 20, 33, 12, 45, 5],
        [0, 19, 1, 3, 1, 0, 3, 8, 1615, 19, 6, 29, 1],
        [0, 19, 0, 2, 0, 2, 5, 17, 11, 2946, 14, 15, 0],
        [0, 60, 0, 1, 0, 0, 0, 11, 5, 15, 631, 5, 0],
        [0, 9, 0, 17, 21, 1, 4, 31, 21, 19, 9, 8069, 3],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 36]
    ]
},

    "resnet-18 large": {
        "resolution": "384",
        "params": "idk",
        "conf_matrix": [
        [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 881, 0, 0, 1, 1, 1, 2, 11, 19, 22, 12, 0],
        [0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 8, 0, 1956, 13, 1, 4, 0, 12, 0, 2, 26, 0],
        [0, 2, 0, 14, 1351, 0, 0, 3, 2, 1, 0, 31, 0],
        [0, 4, 0, 1, 0, 591, 0, 0, 0, 4, 0, 3, 0],
        [0, 2, 0, 2, 1, 0, 477, 10, 7, 6, 0, 12, 2],
        [0, 15, 0, 5, 2, 2, 9, 2913, 30, 41, 12, 55, 3],
        [0, 16, 2, 5, 1, 1, 4, 14, 1623, 15, 2, 21, 1],
        [0, 15, 1, 0, 1, 2, 5, 15, 11, 2959, 7, 15, 0],
        [0, 55, 0, 1, 1, 0, 2, 6, 11, 27, 616, 9, 0],
        [0, 17, 2, 20, 25, 1, 3, 16, 22, 23, 8, 8065, 2],
        [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 35]
    ]
    },

    "cvt large": {
        "resolution": "384",
        "params": "idk",
        "conf_matrix": [
        [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 891, 0, 1, 0, 0, 2, 6, 11, 9, 17, 11, 2],
        [0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [1, 8, 0, 1975, 6, 0, 0, 1, 5, 2, 2, 21, 1],
        [0, 1, 0, 14, 1351, 1, 0, 3, 0, 0, 0, 34, 0],
        [0, 3, 0, 3, 0, 593, 1, 0, 0, 2, 0, 1, 0],
        [1, 2, 0, 0, 1, 0, 499, 3, 2, 5, 0, 7, 0],
        [0, 4, 0, 0, 2, 2, 10, 2988, 19, 14, 4, 41, 3],
        [0, 10, 0, 0, 0, 0, 3, 10, 1652, 14, 2, 12, 2],
        [0, 5, 0, 0, 1, 0, 4, 15, 14, 2972, 8, 12, 0],
        [0, 35, 0, 0, 0, 1, 0, 6, 11, 13, 655, 7, 0],
        [0, 5, 0, 6, 15, 0, 2, 9, 11, 11, 5, 8137, 3],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 36]
    ]
    },

    "convnext large": {
        "resolution": "384",
        "params": "idk",
        "conf_matrix": [
        [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 898, 0, 1, 1, 0, 1, 1, 8, 9, 24, 7, 0],
        [0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [1, 6, 0, 1977, 7, 1, 0, 1, 5, 2, 1, 21, 0],
        [0, 1, 0, 8, 1372, 0, 0, 1, 1, 0, 0, 20, 1],
        [0, 3, 0, 1, 1, 592, 0, 1, 1, 1, 0, 3, 0],
        [0, 0, 0, 0, 1, 0, 501, 6, 1, 2, 1, 7, 0],
        [0, 3, 0, 3, 1, 0, 7, 3005, 11, 18, 6, 32, 1],
        [0, 10, 0, 3, 0, 0, 3, 5, 1657, 5, 5, 16, 1],
        [0, 6, 0, 0, 0, 0, 3, 17, 9, 2977, 7, 12, 0],
        [0, 35, 0, 0, 0, 0, 1, 7, 6, 11, 661, 7, 0],
        [0, 4, 0, 6, 14, 0, 0, 8, 7, 4, 3, 8157, 1],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 36]
    ]

    },

    "beit large": {
        "resolution": "384",
        "params": "idk",
        "conf_matrix": [
        [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 884, 0, 0, 1, 0, 1, 4, 8, 9, 36, 6, 1],
        [0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 4, 0, 1987, 4, 0, 0, 7, 1, 0, 0, 19, 0],
        [0, 1, 1, 5, 1369, 0, 2, 2, 0, 1, 0, 23, 0],
        [0, 2, 0, 0, 0, 600, 0, 0, 0, 0, 0, 1, 0],
        [0, 1, 0, 2, 0, 0, 501, 5, 2, 3, 1, 3, 1],
        [0, 1, 0, 1, 2, 0, 4, 3009, 15, 21, 6, 26, 2],
        [0, 13, 0, 2, 0, 0, 3, 10, 1645, 6, 7, 18, 1],
        [0, 10, 0, 0, 0, 0, 4, 21, 11, 2960, 13, 12, 0],
        [0, 39, 0, 0, 0, 0, 0, 9, 8, 11, 656, 5, 0],
        [0, 3, 0, 10, 16, 0, 1, 11, 5, 6, 5, 8146, 1],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 35]
    ]
    },
    "deit small imbalanced": {
        "resolution": "384",
        "params": "idk",
        "conf_matrix": [
        [4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 3, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 746, 2, 46, 2, 0, 7, 8, 0, 0, 0, 2, 0, 1, 19, 0, 1, 0, 0, 3, 0, 7, 1, 2, 0, 0, 1, 2, 3, 0, 1, 0, 6, 0, 1, 1, 0],
        [0, 2, 0, 0, 0, 0, 2080, 3, 5, 0, 2, 10, 20, 0, 1, 0, 0, 0, 7, 0, 0, 0, 0, 15, 0, 5, 0, 0, 1, 4, 1, 2, 0, 4, 1, 0, 0, 0, 0, 7, 2],
        [0, 0, 3, 1, 0, 61, 2, 760, 5, 1, 7, 11, 0, 1, 1, 8, 56, 0, 15, 3, 0, 0, 0, 3, 0, 3, 8, 8, 0, 2, 6, 9, 5, 0, 12, 0, 23, 2, 1, 0, 0],
        [0, 0, 0, 0, 0, 1, 0, 0, 550, 0, 0, 2, 1, 0, 1, 0, 0, 0, 3, 0, 0, 0, 0, 1, 0, 8, 1, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 3, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 11, 3, 8, 6, 0, 2810, 29, 1, 0, 3, 20, 1, 0, 35, 0, 0, 0, 0, 10, 0, 27, 0, 1, 0, 2, 0, 0, 0, 0, 3, 0, 3, 0, 0, 2, 0],
        [0, 3, 0, 0, 0, 22, 5, 14, 7, 0, 19, 1684, 3, 0, 5, 10, 0, 0, 18, 0, 0, 0, 0, 12, 0, 26, 2, 0, 3, 6, 1, 2, 1, 0, 2, 0, 3, 0, 0, 5, 1],
        [0, 2, 0, 0, 0, 2, 18, 0, 3, 0, 0, 2, 1479, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 29, 0, 5, 0, 1, 0, 2, 1, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2],
        [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 38, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 1, 2, 1, 0, 2, 1, 0, 0, 0, 234, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 31, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
        [0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
        [1, 0, 0, 0, 0, 14, 0, 3, 3, 0, 3, 6, 0, 0, 1, 3, 0, 0, 305, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], 
        [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
        [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
        [0, 1, 0, 0, 0, 79, 103, 44, 20, 0, 32, 67, 183, 0, 2, 29, 0, 0, 26, 0, 0, 0, 0, 7535, 0, 106, 0, 0, 0, 19, 0, 1, 1, 4, 3, 0, 1, 0, 0, 89, 9], 
        [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
        [0, 2, 0, 0, 0, 34, 13, 12, 15, 0, 41, 44, 6, 0, 5, 28, 0, 0, 61, 0, 0, 0, 0, 59, 0, 2854, 2, 3, 0, 4, 0, 4, 1, 0, 3, 0, 0, 0, 0, 43, 3], 
        [0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 36, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0], 
        [0, 0, 0, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 2, 0, 0, 0, 0, 0, 0, 1, 0, 31, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], 
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
        [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 733, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], 
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
        [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 53, 0, 0, 4, 0, 1, 0, 0, 0, 0], 
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 106, 0, 0, 0, 0, 0, 0, 0, 0], 
        [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68, 0, 0, 0, 0, 0, 0, 0], 
        [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0], 
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0], 
        [0, 0, 0, 0, 0, 1, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 70, 0, 0, 0, 0], 
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0], 
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 17, 0, 0], 
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 184, 0], 
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48]

    ]
    },
    "vit small imbalanced": {
        "resolution": "384",
        "params": "idk",
        "conf_matrix": [
            [4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 3, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [1, 0, 0, 0, 1, 753, 0, 29, 3, 0, 6, 4, 0, 0, 0, 4, 0, 0, 25, 0, 0, 0, 1, 5, 0, 6, 1, 4, 0, 2, 1, 2, 1, 0, 3, 0, 7, 0, 1, 2, 0], 
            [0, 1, 0, 0, 0, 2, 2083, 3, 4, 0, 2, 10, 21, 0, 0, 1, 1, 0, 5, 0, 0, 0, 0, 12, 0, 5, 0, 1, 1, 0, 0, 3, 0, 6, 1, 0, 0, 0, 0, 9, 1], 
            [0, 0, 9, 1, 0, 62, 1, 654, 1, 1, 6, 2, 0, 2, 0, 6, 83, 1, 17, 12, 8, 3, 0, 3, 1, 7, 26, 16, 0, 1, 7, 17, 4, 0, 19, 0, 35, 4, 8, 0, 0], 
            [0, 0, 0, 1, 0, 3, 0, 1, 548, 0, 0, 3, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 3, 0, 6, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 2, 0], 
            [0, 0, 0, 0, 0, 0, 0, 1, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [2, 0, 0, 0, 0, 15, 4, 5, 1, 0, 2779, 19, 2, 1, 0, 23, 0, 0, 44, 0, 0, 0, 0, 12, 0, 44, 1, 4, 1, 4, 0, 0, 1, 0, 3, 0, 4, 0, 0, 4, 2], 
            [0, 1, 0, 0, 0, 16, 5, 9, 5, 2, 10, 1669, 1, 0, 2, 6, 0, 1, 25, 0, 0, 0, 0, 21, 0, 35, 4, 8, 6, 1, 1, 4, 0, 0, 5, 0, 5, 0, 0, 9, 3], 
            [0, 0, 0, 0, 0, 2, 20, 3, 1, 0, 1, 4, 1485, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 26, 0, 3, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 5], 
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 233, 0, 0, 3, 0, 0, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], 
            [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 37, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [1, 0, 0, 0, 0, 18, 0, 3, 2, 0, 2, 3, 1, 0, 1, 2, 1, 0, 306, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0], 
            [2, 1, 1, 0, 0, 72, 75, 33, 25, 0, 29, 56, 106, 0, 1, 14, 1, 2, 27, 0, 0, 1, 1, 7727, 1, 93, 1, 1, 0, 5, 2, 9, 2, 4, 9, 0, 1, 2, 0, 44, 6], 
            [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [1, 1, 0, 0, 0, 32, 7, 7, 25, 1, 26, 56, 7, 0, 3, 28, 0, 0, 53, 0, 0, 0, 0, 62, 0, 2868, 0, 4, 1, 2, 0, 2, 1, 4, 4, 0, 1, 0, 0, 36, 5], 
            [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 38, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 36, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 734, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], 
            [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 55, 0, 0, 4, 0, 2, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 106, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 69, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 64, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 1, 0, 3, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 69, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0],  
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 16, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 186, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48],]
    },
    "swin small imbalanced": {
        "resolution": "384",
        "params": "idk",
        "conf_matrix": [
            [4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 3, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 755, 1, 34, 2, 0, 5, 6, 0, 0, 0, 2, 1, 2, 28, 0, 0, 0, 0, 5, 0, 5, 1, 2, 0, 1, 1, 1, 1, 0, 2, 0, 6, 0, 1, 0, 0],
            [0, 0, 0, 0, 0, 1, 2103, 3, 7, 0, 3, 12, 7, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 12, 0, 3, 0, 0, 0, 1, 1, 1, 0, 3, 0, 0, 0, 0, 0, 10, 2], 
            [0, 0, 7, 1, 0, 32, 3, 766, 0, 2, 8, 5, 1, 2, 1, 4, 62, 1, 12, 3, 0, 0, 0, 1, 0, 4, 20, 10, 0, 2, 4, 11, 1, 0, 17, 0, 33, 3, 1, 0, 0], 
            [0, 0, 0, 0, 0, 1, 1, 2, 558, 0, 0, 2, 0, 0, 1, 2, 0, 0, 1, 0, 0, 0, 0, 2, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 6, 4, 5, 2, 0, 2808, 25, 2, 0, 3, 15, 0, 0, 36, 0, 0, 0, 0, 11, 0, 44, 1, 1, 0, 4, 0, 1, 2, 0, 2, 0, 1, 0, 0, 1, 1], 
            [0, 1, 0, 0, 0, 17, 2, 10, 7, 1, 17, 1694, 1, 0, 3, 15, 0, 0, 18, 0, 0, 0, 0, 11, 0, 33, 1, 0, 3, 7, 0, 2, 0, 0, 1, 0, 2, 0, 0, 6, 2], 
            [0, 0, 0, 0, 0, 0, 29, 0, 1, 0, 1, 3, 1476, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 34, 0, 2, 0, 0, 0, 3, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 39, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 2, 0, 0, 1, 235, 0, 0, 2, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [1, 0, 0, 0, 0, 10, 0, 2, 1, 0, 3, 5, 0, 0, 1, 4, 0, 0, 313, 0, 0, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 16, 68, 22, 30, 0, 23, 55, 91, 0, 1, 25, 0, 0, 13, 0, 0, 1, 0, 7851, 0, 85, 0, 0, 1, 4, 2, 3, 0, 4, 8, 0, 0, 1, 0, 49, 1], 
            [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 1, 0, 0, 0, 18, 11, 5, 21, 0, 21, 26, 4, 0, 8, 24, 0, 0, 45, 0, 0, 0, 0, 39, 0, 2974, 1, 2, 0, 2, 0, 3, 0, 1, 3, 0, 0, 1, 0, 26, 1], 
            [0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 37, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 1, 2, 2, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 730, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 1, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 54, 0, 0, 4, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 105, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 68, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 62, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 70, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 16, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 185, 0], 
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48]
            ]
    },
    "swin small augmented": {
        "resolution": "384",
        "params": "idk",
        "conf_matrix": [
            [4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 3, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 755, 1, 34, 2, 0, 5, 6, 0, 0, 0, 2, 1, 2, 28, 0, 0, 0, 0, 5, 0, 5, 1, 2, 0, 1, 1, 1, 1, 0, 2, 0, 6, 0, 1, 0, 0], 
            [0, 0, 0, 0, 0, 1, 2103, 3, 7, 0, 3, 12, 7, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 12, 0, 3, 0, 0, 0, 1, 1, 1, 0, 3, 0, 0, 0, 0, 0, 10, 2], 
            [0, 0, 7, 1, 0, 32, 3, 766, 0, 2, 8, 5, 1, 2, 1, 4, 62, 1, 12, 3, 0, 0, 0, 1, 0, 4, 20, 10, 0, 2, 4, 11, 1, 0, 17, 0, 33, 3, 1, 0, 0], 
            [0, 0, 0, 0, 0, 1, 1, 2, 558, 0, 0, 2, 0, 0, 1, 2, 0, 0, 1, 0, 0, 0, 0, 2, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 6, 4, 5, 2, 0, 2808, 25, 2, 0, 3, 15, 0, 0, 36, 0, 0, 0, 0, 11, 0, 44, 1, 1, 0, 4, 0, 1, 2, 0, 2, 0, 1, 0, 0, 1, 1], 
            [0, 1, 0, 0, 0, 17, 2, 10, 7, 1, 17, 1694, 1, 0, 3, 15, 0, 0, 18, 0, 0, 0, 0, 11, 0, 33, 1, 0, 3, 7, 0, 2, 0, 0, 1, 0, 2, 0, 0, 6, 2], 
            [0, 0, 0, 0, 0, 0, 29, 0, 1, 0, 1, 3, 1476, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 34, 0, 2, 0, 0, 0, 3, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 39, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 2, 0, 0, 1, 235, 0, 0, 2, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [1, 0, 0, 0, 0, 10, 0, 2, 1, 0, 3, 5, 0, 0, 1, 4, 0, 0, 313, 0, 0, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 16, 68, 22, 30, 0, 23, 55, 91, 0, 1, 25, 0, 0, 13, 0, 0, 1, 0, 7851, 0, 85, 0, 0, 1, 4, 2, 3, 0, 4, 8, 0, 0, 1, 0, 49, 1], 
            [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 1, 0, 0, 0, 18, 11, 5, 21, 0, 21, 26, 4, 0, 8, 24, 0, 0, 45, 0, 0, 0, 0, 39, 0, 2974, 1, 2, 0, 2, 0, 3, 0, 1, 3, 0, 0, 1, 0, 26, 1], 
            [0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 37, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 1, 2, 2, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 730, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 1, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 54, 0, 0, 4, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 105, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 68, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 62, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 70, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 16, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 185, 0], 
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48]]
    },
    "vit small augmented": {
        "resolution": "384",
        "params": "idk",
        "conf_matrix": [
            [4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 3, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 742, 1, 49, 2, 0, 5, 6, 0, 0, 0, 4, 0, 1, 22, 0, 1, 0, 0, 4, 0, 5, 1, 2, 0, 1, 1, 3, 1, 0, 4, 0, 5, 0, 2, 0, 0], 
            [0, 2, 0, 0, 0, 1, 2081, 7, 3, 0, 2, 25, 11, 0, 2, 2, 0, 0, 5, 0, 0, 0, 0, 14, 0, 6, 0, 0, 1, 0, 1, 1, 0, 4, 0, 0, 0, 0, 0, 4, 0], 
            [0, 0, 2, 1, 0, 48, 1, 775, 1, 2, 6, 7, 1, 2, 1, 6, 56, 1, 17, 3, 0, 0, 1, 1, 0, 6, 11, 12, 0, 3, 4, 13, 6, 0, 13, 0, 13, 3, 1, 0, 0], 
            [0, 0, 0, 0, 0, 2, 0, 2, 547, 0, 0, 3, 2, 0, 0, 3, 0, 0, 1, 0, 0, 0, 0, 3, 0, 8, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0], 
            [0, 0, 0, 0, 0, 0, 0, 1, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 13, 10, 17, 3, 0, 2764, 33, 2, 0, 2, 24, 0, 0, 45, 0, 0, 0, 0, 9, 0, 39, 2, 3, 0, 2, 0, 0, 2, 0, 1, 0, 2, 0, 0, 2, 0], 
            [0, 0, 0, 0, 0, 21, 7, 17, 9, 1, 16, 1663, 0, 0, 7, 16, 0, 0, 24, 0, 0, 0, 1, 18, 0, 28, 2, 2, 1, 3, 1, 5, 2, 1, 2, 0, 0, 0, 0, 6, 1], 
            [0, 0, 0, 0, 0, 2, 20, 1, 0, 0, 2, 4, 1485, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 30, 0, 2, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2], 
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 1, 1, 0, 0, 0, 237, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0], 
            [1, 0, 0, 0, 0, 15, 0, 6, 1, 0, 0, 5, 1, 0, 1, 3, 0, 0, 305, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 77, 75, 55, 20, 0, 27, 62, 100, 0, 6, 21, 0, 2, 28, 0, 0, 0, 0, 7691, 0, 122, 0, 0, 0, 12, 0, 4, 0, 1, 8, 0, 0, 0, 0, 39, 4], 
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 2, 0, 1, 0, 33, 16, 13, 12, 0, 28, 54, 6, 0, 7, 37, 0, 0, 72, 0, 0, 0, 0, 54, 0, 2864, 1, 2, 0, 2, 0, 2, 1, 1, 3, 0, 1, 1, 0, 23, 1], 
            [0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 37, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 1, 0, 3, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 731, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1], 
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 56, 0, 0, 1, 0, 1, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 106, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 68, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 62, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 65, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 16, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 185, 0], 
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 47]]
    },
    "deit small augmented": {
        "resolution": "384",
        "params": "idk",
        "conf_matrix": [
            [4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 3, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 746, 2, 46, 2, 0, 7, 8, 0, 0, 0, 2, 0, 1, 19, 0, 1, 0, 0, 3, 0, 7, 1, 2, 0, 0, 1, 2, 3, 0, 1, 0, 6, 0, 1, 1, 0], 
            [0, 2, 0, 0, 0, 0, 2080, 3, 5, 0, 2, 10, 20, 0, 1, 0, 0, 0, 7, 0, 0, 0, 0, 15, 0, 5, 0, 0, 1, 4, 1, 2, 0, 4, 1, 0, 0, 0, 0, 7, 2], 
            [0, 0, 3, 1, 0, 61, 2, 760, 5, 1, 7, 11, 0, 1, 1, 8, 56, 0, 15, 3, 0, 0, 0, 3, 0, 3, 8, 8, 0, 2, 6, 9, 5, 0, 12, 0, 23, 2, 1, 0, 0], 
            [0, 0, 0, 0, 0, 1, 0, 0, 550, 0, 0, 2, 1, 0, 1, 0, 0, 0, 3, 0, 0, 0, 0, 1, 0, 8, 1, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 3, 0], 
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 11, 3, 8, 6, 0, 2810, 29, 1, 0, 3, 20, 1, 0, 35, 0, 0, 0, 0, 10, 0, 27, 0, 1, 0, 2, 0, 0, 0, 0, 3, 0, 3, 0, 0, 2, 0], 
            [0, 3, 0, 0, 0, 22, 5, 14, 7, 0, 19, 1684, 3, 0, 5, 10, 0, 0, 18, 0, 0, 0, 0, 12, 0, 26, 2, 0, 3, 6, 1, 2, 1, 0, 2, 0, 3, 0, 0, 5, 1], 
            [0, 2, 0, 0, 0, 2, 18, 0, 3, 0, 0, 2, 1479, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 29, 0, 5, 0, 1, 0, 2, 1, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2], 
            [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 38, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 1, 2, 1, 0, 2, 1, 0, 0, 0, 234, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 31, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [1, 0, 0, 0, 0, 14, 0, 3, 3, 0, 3, 6, 0, 0, 1, 3, 0, 0, 305, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], 
            [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 1, 0, 0, 0, 79, 103, 44, 20, 0, 32, 67, 183, 0, 2, 29, 0, 0, 26, 0, 0, 0, 0, 7535, 0, 106, 0, 0, 0, 19, 0, 1, 1, 4, 3, 0, 1, 0, 0, 89, 9], 
            [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 2, 0, 0, 0, 34, 13, 12, 15, 0, 41, 44, 6, 0, 5, 28, 0, 0, 61, 0, 0, 0, 0, 59, 0, 2854, 2, 3, 0, 4, 0, 4, 1, 0, 3, 0, 0, 0, 0, 43, 3], 
            [0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 36, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 2, 0, 0, 0, 0, 0, 0, 1, 0, 31, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 733, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], 
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 53, 0, 0, 4, 0, 1, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 106, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68, 0, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 1, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 70, 0, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 17, 0, 0], 
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 184, 0], 
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48]]
    },
    "deit small": {
        "resolution": "384",
        "params": "idk",
        "conf_matrix": [
            [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [1, 801, 0, 2, 3, 0, 11, 6, 10, 17, 91, 4, 4], 
            [0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [5, 8, 5, 1905, 23, 4, 3, 5, 25, 4, 3, 22, 10], 
            [0, 1, 1, 18, 1328, 5, 1, 1, 5, 2, 0, 39, 3], 
            [0, 2, 0, 1, 1, 591, 3, 1, 0, 2, 0, 2, 0], 
            [0, 5, 1, 1, 1, 0, 484, 6, 3, 9, 1, 6, 2], 
            [0, 22, 2, 6, 7, 2, 40, 2777, 43, 94, 30, 42, 22], 
            [0, 24, 7, 5, 1, 2, 8, 13, 1574, 15, 33, 16, 7], 
            [3, 23, 5, 2, 1, 3, 23, 25, 35, 2857, 42, 9, 3], 
            [0, 37, 1, 1, 0, 3, 1, 8, 5, 8, 658, 5, 1], 
            [2, 25, 7, 52, 112, 18, 49, 80, 82, 33, 59, 7640, 45], 
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 37]]
    },
    "swin small": {
        "resolution": "384",
        "params": "idk",
        "conf_matrix": [
            [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [1, 837, 0, 2, 1, 2, 6, 4, 10, 13, 63, 5, 5], 
            [0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [6, 7, 7, 1943, 16, 0, 0, 2, 16, 0, 0, 16, 9], 
            [0, 1, 1, 19, 1356, 1, 3, 0, 3, 1, 0, 19, 0], 
            [1, 1, 0, 1, 2, 596, 0, 0, 1, 1, 0, 0, 0], 
            [0, 2, 1, 0, 0, 1, 492, 7, 3, 5, 0, 4, 4], 
            [0, 14, 4, 4, 4, 2, 29, 2856, 38, 53, 25, 31, 27], 
            [0, 14, 2, 6, 0, 3, 12, 13, 1602, 17, 18, 11, 7], 
            [4, 19, 4, 2, 2, 4, 18, 28, 26, 2886, 24, 10, 4], 
            [0, 30, 0, 1, 0, 1, 1, 7, 3, 12, 668, 4, 1], 
            [1, 18, 3, 47, 91, 3, 33, 69, 62, 19, 30, 7796, 32], 
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 37]]
    },
    "vit small": {
        "resolution": "384",
        "params": "idk",
        "conf_matrix": [
            [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [0, 827, 0, 0, 1, 1, 5, 7, 9, 11, 78, 7, 4], 
            [0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
            [2, 9, 5, 1921, 19, 3, 6, 1, 23, 6, 3, 13, 1], 
            [0, 2, 3, 26, 1330, 3, 4, 3, 3, 0, 0, 29, 1], 
            [0, 2, 0, 1, 0, 598, 1, 0, 0, 1, 0, 0, 0], 
            [0, 3, 0, 2, 2, 0, 484, 3, 7, 6, 1, 4, 7], 
            [1, 10, 2, 4, 10, 5, 58, 2723, 75, 65, 40, 51, 43], 
            [0, 17, 6, 5, 4, 7, 15, 19, 1544, 23, 35, 14, 16], 
            [1, 32, 6, 2, 2, 6, 7, 26, 41, 2838, 44, 13, 3], 
            [0, 38, 0, 0, 1, 3, 1, 7, 3, 6, 663, 5, 1], 
            [0, 41, 12, 102, 150, 19, 58, 86, 67, 22, 55, 7548, 44], 
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 37]]
    }
}

summary_files = {
    "ViT large": "../../Experiments/vit_results/google_vit-base-patch16-384_evaluation_summary.txt",
    "Swin large": "../../Experiments/swin_results/microsoft_swin-base-patch4-window12-384_evaluation_summary.txt",
    "DeiT large": "../../Experiments/deit_results/facebook_deit-base-patch16-384_evaluation_summary.txt",
    "resnet-152 small": "../../Experiments/resnet-152_lr1em04_seed42_ep30_bs8-inference-results/resnet-152_lr1em04_seed42_ep30_bs8_evaluation_summary.txt",
    "resnet-50 small": "../../Experiments/resnet-50_lr1em04_seed42_ep30_bs8-inference-results/resnet-50_lr1em04_seed42_ep30_bs8_evaluation_summary.txt",
    "resnet-18 small": "../../Experiments/resnet-18_lr1em04_seed42_ep30_bs8-inference-results/resnet-18_lr1em04_seed42_ep30_bs8_evaluation_summary.txt",
    "resnet-152 large": "../../Experiments/resnet-152_lr1em04_seed42_ep50_bs8-inference-results/resnet-152_lr1em04_seed42_ep50_bs8_evaluation_summary.txt",
    "resnet-50 large": "../../Experiments/resnet-50_lr1em04_seed42_ep50_bs8-inference-results/resnet-50_lr1em04_seed42_ep50_bs8_evaluation_summary.txt",
    "resnet-18 large": "../../Experiments/resnet-18_lr1em04_seed42_ep50_bs8-inference-results/resnet-18_lr1em04_seed42_ep50_bs8_evaluation_summary.txt",
    "cvt small": "../../Experiments/cvt-13-384_lr1em04_seed42_ep30_bs8-inference-results/cvt-13-384_lr1em04_seed42_ep30_bs8_evaluation_summary.txt",
    "cvt large": "../../Experiments/cvt-13-384_lr1em04_seed42_ep50_bs8-inference-results/cvt-13-384_lr1em04_seed42_ep50_bs8_evaluation_summary.txt",
    "convnext small": "../../Experiments/convnext-base-384_lr1em04_seed42_ep30_bs8-inference-results/convnext-base-384_lr1em04_seed42_ep30_bs8_evaluation_summary.txt",
    "convnext large": "../../Experiments/convnext-base-384_lr1em04_seed42_ep50_bs8-inference-results/convnext-base-384_lr1em04_seed42_ep50_bs8_evaluation_summary.txt",
    "beit small": "../../Experiments/beit-base-patch16-384_lr1em04_seed42_ep30_bs8-inference-results/beit-base-patch16-384_lr1em04_seed42_ep30_bs8_evaluation_summary.txt",
    "beit large": "../../Experiments/beit-base-patch16-384_lr1em04_seed42_ep50_bs8-inference-results/beit-base-patch16-384_lr1em04_seed42_ep50_bs8_evaluation_summary.txt",
    "vit small": "../../Experiments/inference-result-small/vit-base-patch16-384_lr1em04_seed42_ep30_bs8-inference-results/vit-base-patch16-384_lr1em04_seed42_ep30_bs8_evaluation_summary.txt",
    "vit small imbalanced": "../../Experiments/inference-result-all-small/vit-base-patch16-384_lr1em04_seed42_ep30_bs8-inference-results/vit-base-patch16-384_lr1em04_seed42_ep30_bs8_evaluation_summary.txt",
    "vit small augmented": "../../Experiments/inference-result-all-small-balanced/vit-base-patch16-384_lr1em04_seed42_ep30_bs8-inference-results/vit-base-patch16-384_lr1em04_seed42_ep30_bs8_evaluation_summary.txt",
    "deit small": "../../Experiments/inference-result-small/deit-base-patch16-384_lr1em04_seed42_ep30_bs8-inference-results/deit-base-patch16-384_lr1em04_seed42_ep30_bs8_evaluation_summary.txt",
    "deit small imbalanced": "../../Experiments/inference-result-all-small/deit-base-patch16-384_lr1em04_seed42_ep30_bs8-inference-results/deit-base-patch16-384_lr1em04_seed42_ep30_bs8_evaluation_summary.txt",
    "deit small augmented": "../../Experiments/inference-result-all-small-balanced/deit-base-patch16-384_lr1em04_seed42_ep30_bs8-inference-results/deit-base-patch16-384_lr1em04_seed42_ep30_bs8_evaluation_summary.txt",
    "swin small": "../../Experiments/inference-result-small/swin-base-patch4-window12-384_lr1em04_seed42_ep30_bs8-inference-results/swin-base-patch4-window12-384_lr1em04_seed42_ep30_bs8_evaluation_summary.txt",
    "swin small imbalanced": "../../Experiments/inference-result-all-small/swin-base-patch4-window12-384_lr1em04_seed42_ep30_bs8-inference-results/swin-base-patch4-window12-384_lr1em04_seed42_ep30_bs8_evaluation_summary.txt",
    "swin small augmented": "../../Experiments/inference-result-all-small-balanced/swin-base-patch4-window12-384_lr1em04_seed42_ep30_bs8-inference-results/swin-base-patch4-window12-384_lr1em04_seed42_ep30_bs8_evaluation_summary.txt",

}

records = []
count=1
for model, path in summary_files.items():
    accuracy, throughput = None, None

    with open(path, "r") as f:
        for line in f:
            if "Overall Accuracy" in line:
                match = re.search(r"([\d.]+)%", line)
                if match:
                    accuracy = float(match.group(1))
            if "Throughput" in line:
                match = re.search(r"([\d.]+)", line)
                if match:
                    throughput = float(match.group(1))
    print(count, model)
    if count == 20:
        print(len(model_info[model]["conf_matrix"]), len(model_info[model]["conf_matrix"][0]))
        for row in range(len(model_info[model]["conf_matrix"])):
            num = len(model_info[model]["conf_matrix"][row])
            if num != 41:
                print(model, row)
    count=count+1
    cm = np.array(model_info[model]["conf_matrix"])
    num_classes = cm.shape[0]

    precisions, recalls, specificities, f1s, fprs, fnrs = [], [], [], [], [], []

    for i in range(num_classes):
        TP = cm[i, i]
        FN = np.sum(cm[i, :]) - TP
        FP = np.sum(cm[:, i]) - TP
        TN = np.sum(cm) - (TP + FP + FN)

        precision = TP / (TP + FP) if (TP + FP) > 0 else 0
        recall = TP / (TP + FN) if (TP + FN) > 0 else 0
        specificity = TN / (TN + FP) if (TN + FP) > 0 else 0
        f1 = 2 * precision * recall / (precision + recall) if (precision + recall) > 0 else 0
        fpr = FP / (FP + TN) if (FP + TN) > 0 else 0
        fnr = FN / (FN + TP) if (FN + TP) > 0 else 0

        precisions.append(precision)
        recalls.append(recall)
        specificities.append(specificity)
        f1s.append(f1)
        fprs.append(fpr)
        fnrs.append(fnr)

    name = model.lower()

    # === Dataset assignment
    if "small" in name and "imbalanced" in name:
        dataset = "Small Imbalanced"
    elif "small" in name and "augmented" in name:
        dataset = "Small Augmented"
    elif "small" in name:
        dataset = "Small Combined"
    else:
        dataset = "Large Combined"

    # === Model type
    model_type = "CNN" if "resnet" in name or "convnext" in name else "Transformer"
    group = f"{model_type} {dataset}"

    display_name = re.sub(r"\s+(small|large|augmented|imbalanced|combined)", "", model, flags=re.IGNORECASE).strip()

    records.append({
        "Model": display_name,
        "Dataset": dataset,
        "Group": group,
        "ModelType": model_type,
        "Params": model_info[model]["params"],
        "Accuracy": accuracy,
        "Precision": np.mean(precisions),
        "Recall": np.mean(recalls),
        "Specificity": np.mean(specificities),
        "FPR": np.mean(fprs),
        "FNR": np.mean(fnrs),
        "F1": np.mean(f1s),
        "Throughput": throughput
    })

# === DataFrame construction
df = pd.DataFrame(records)

# === Bolding best metrics in each group
metrics_to_bold_high = ["Accuracy", "Precision", "Recall", "Specificity", "F1", "Throughput"]
metrics_to_bold_low = ["FPR", "FNR"]

def bold_best_in_group(group_df, col, is_high=True):
    comp_func = np.nanmax if is_high else np.nanmin
    best_val = comp_func(group_df[col].astype(float))
    return group_df[col].apply(
        lambda x: f"\\textbf{{{x:.2f}}}" if float(x) == best_val else f"{x:.2f}"
    )

for col in metrics_to_bold_high + metrics_to_bold_low:
    is_high = col in metrics_to_bold_high
    df[col] = df.groupby("Group", group_keys=False).apply(lambda g: bold_best_in_group(g, col, is_high))

# Format accuracy percentage
df["Accuracy"] = df["Accuracy"].str.replace(r"(?<!\\)%", r"\\%", regex=True)

# === Sorting
dataset_order = ["Small Imbalanced", "Small Augmented", "Small Combined", "Large Combined"]
df["Dataset"] = pd.Categorical(df["Dataset"], categories=dataset_order, ordered=True)
df["ModelType"] = pd.Categorical(df["ModelType"], categories=["Transformer", "CNN"], ordered=True)

df = df.sort_values(by=["Dataset", "ModelType", "Model"])

# === LaTeX Generation
display_cols = ["Model", "Dataset", "Params", "Accuracy",
                "Precision", "Recall", "Specificity", "F1", "Throughput"]

latex_rows = []
latex_rows.append(" & ".join(display_cols) + r" \\")
latex_rows.append(r"\hline")

last_dataset, last_type = None, None
for _, row in df.iterrows():
    current_dataset = row["Dataset"]
    current_type = row["ModelType"]
    if last_dataset is not None:
        if current_dataset != last_dataset:
            latex_rows.append(r"\hline\hline")
        elif current_type != last_type:
            latex_rows.append(r"\hline")
    last_dataset, last_type = current_dataset, current_type
    latex_rows.append(" & ".join([row[col] for col in display_cols]) + r" \\")

latex_table = "\n".join([
    r"\resizebox{\textwidth}{!}{%",
    r"\begin{tabular}{l|cc|ccccc|c}",
    r"\hline",
    *latex_rows,
    r"\end{tabular}",
    r"}"
])

print("\n=== LaTeX Table ===\n")
print(latex_table)


# for model, path in summary_files.items():
#     accuracy = None
#     throughput = None

#     with open(path, "r") as f:
#         for line in f:
#             if "Overall Accuracy" in line:
#                 match = re.search(r"([\d.]+)%", line)
#                 if match:
#                     accuracy = float(match.group(1))
#             if "Throughput" in line:
#                 match = re.search(r"([\d.]+)", line)
#                 if match:
#                     throughput = float(match.group(1))

#     cm = np.array(model_info[model]["conf_matrix"])
#     num_classes = cm.shape[0]

#     precisions = []
#     recalls = []
#     specificities = []
#     f1s = []
#     fprs = []
#     fnrs = []

#     for i in range(num_classes):
#         TP = cm[i, i]
#         FN = np.sum(cm[i, :]) - TP
#         FP = np.sum(cm[:, i]) - TP
#         TN = np.sum(cm) - (TP + FP + FN)

#         precision = TP / (TP + FP) if (TP + FP) > 0 else 0
#         recall = TP / (TP + FN) if (TP + FN) > 0 else 0
#         specificity = TN / (TN + FP) if (TN + FP) > 0 else 0
#         f1 = 2 * precision * recall / (precision + recall) if (precision + recall) > 0 else 0
#         fpr = FP / (FP + TN) if (FP + TN) > 0 else 0
#         fnr = FN / (FN + TP) if (FN + TP) > 0 else 0

#         precisions.append(precision)
#         recalls.append(recall)
#         specificities.append(specificity)
#         f1s.append(f1)
#         fprs.append(fpr)
#         fnrs.append(fnr)

#     records.append({
#         "Model": model,
#         "Resolution": model_info[model]["resolution"],
#         "Params": model_info[model]["params"],
#         "Accuracy": accuracy,
#         "Precision": np.mean(precisions),
#         "Recall": np.mean(recalls),
#         "Specificity": np.mean(specificities),
#         "FPR": np.mean(fprs),
#         "FNR": np.mean(fnrs),
#         "F1": np.mean(f1s),
#         "Throughput": throughput
#     })

# # Create DataFrame
# df = pd.DataFrame(records)

# # Format columns
# metrics_to_bold_high = ["Accuracy", "Precision", "Recall", "Specificity", "F1", "Throughput"]
# metrics_to_bold_low = ["FPR", "FNR"]

# for col in df.columns:
#     if col in metrics_to_bold_high:
#         max_val = df[col].max()
#         df[col] = df[col].apply(lambda x: f"\\textbf{{{x:.2f}}}" if x == max_val else f"{x:.2f}")
#     elif col in metrics_to_bold_low:
#         min_val = df[col].min()
#         df[col] = df[col].apply(lambda x: f"\\textbf{{{x:.2f}}}" if x == min_val else f"{x:.2f}")
#     elif col == "Accuracy":
#         df["Accuracy"] = df["Accuracy"].apply(lambda x: f"{x:.2f}\\%")

# # Fix accuracy % formatting (needed again after bolding)
# df["Accuracy"] = df["Accuracy"].str.replace("%", r"\%", regex=False)

# # Reorder columns as requested
# df = df[[
#     "Model", "Resolution", "Params", "Accuracy",
#     "Precision", "Recall", "Specificity", "F1", "Throughput"
# ]]

# # Add Group column based on model name
# df["Group"] = df["Model"].apply(lambda x: "Small" if "small" in x.lower() else "Large")
# df = df.sort_values("Group", ascending=False)  # Optional: large first

# # Reorder columns for LaTeX
# display_cols = ["Model", "Resolution", "Params", "Accuracy",
#                 "Precision", "Recall", "Specificity", "F1", "Throughput"]

# # Build LaTeX rows with group separator
# latex_rows = []
# header = " & ".join(display_cols) + r" \\"
# latex_rows.append(header)
# latex_rows.append(r"\hline")

# last_group = None
# for _, row in df.iterrows():
#     current_group = row["Group"]
#     if last_group is not None and current_group != last_group:
#         latex_rows.append(r"\hline")  # separator between groups
#     last_group = current_group
#     row_data = " & ".join([row[col] for col in display_cols]) + r" \\"
#     latex_rows.append(row_data)

# # Wrap in LaTeX table
# latex_table = "\n".join([
#     r"\resizebox{\textwidth}{!}{%",
#     r"\begin{tabular}{l|cc|ccccc|c}",
#     r"\hline",
#     *latex_rows,
#     r"\end{tabular}",
#     r"}"
# ])

# # Print LaTeX
# print("\n=== LaTeX Table ===\n")
# print(latex_table)

